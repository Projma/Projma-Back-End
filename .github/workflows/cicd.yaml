name: Django & Postgres CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres_main:
        image: postgres:14
        env:
          POSTGRES_USER: projmateam
          POSTGRES_PASSWORD: classicguys
          POSTGRES_DB: ProjmaDB
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install Requirements
      run: |
        cd app
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Make env file
      run: |
        echo "${{ secrets.DEV_ENV_FILE }}" > ./.env.dev
    - name: Run Tests
      run: |
        cd app
        pytest
  
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Modify entrypoint permission
      run: chmod +x app/entrypoint.prod.sh
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: app/
        file: app/Dockerfile.prod
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/projmabackend:1.0.0
  
  deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: remote ssh
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASS }}
          port: ${{ secrets.VPS_PORT }}

          script: |
            docker compose -f /root/Projma-Back-End/docker-compose.dep.yml down
            docker ps | grep "mohammad2782/projmabackend" | awk '{print $3}' | xargs docker rmi
            docker pull mohammad2782/projmabackend:1.0.0
            docker compose -f /root/Projma-Back-End/docker-compose.dep.yml up -d

   